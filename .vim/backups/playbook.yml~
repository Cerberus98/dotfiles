---
- hosts: all
  gather_facts: False 
  vars:
      python_versions:
          - version: 2.7
          - version: 3.5
      dependencies:
          - daemon
          - golang-go
          - gcc
          - git
          - isc-dhcp-server
          - python-pip
          - python-virtualenv
      ansible_python_interpreter: /usr/bin/python2.7 
      verbose: -vvv
      images:
          - url: http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-kernel
            dest: cirros-kernel.vmlinuz
          - url: http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-initramfs
            dest: cirros-initrd.gz
          - url: http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
            dest: cirros-disk.img
  tasks:
    - name: update
      sudo: True
      raw: apt-get update -qq
    - name: install pythons
      with_items: python_versions
      sudo: True
      raw: apt-get install -qq python{{ item.version }}
    - name: install base-deps
      with_items: "{{ dependencies }}"
      sudo: True
      apt: name={{ item }} state=latest
    - name: Create /etc/profile.d
      sudo: True
      raw: mkdir -p /etc/profile.d
    - name: Setup DHCPD
      sudo: True
      copy: src=files/dhcpd.conf
            dest=/etc/dhcp/
    - name: Restart DHCPD
      sudo: True
      raw: systemctl restart isc-dhcp-server
    - name: Set users' GOPATH
      sudo: yes
      copy: src=files/go-path.sh
            dest=/etc/profile.d/
    - name: Install Pixiecore
      shell: . /etc/profile && go get go.universe.tf/netboot/cmd/pixiecore
    - name: Fix perms
      shell: chmod 755 /home/ubuntu/go /home/ubuntu/go/bin/ /home/ubuntu/go/bin/pixiecore
    - name: Fetch Pixiecore Images
      with_items: "{{ images }}"
      get_url: url={{ item["url"] }} dest=/home/ubuntu/{{ item["dest"] }}
    - name: Create tinkerbell source dir
      file: path=/home/ubuntu/tinkerbell state=directory
    - name: Upload tinkerbell source
      copy: src=../tinkerbell
            dest=/home/ubuntu
            mode=700
    - name: Setup Tinkerbell
      sudo: True
      shell: pip install --upgrade pip && pip install -r requirements.txt && pip install -e . chdir=/home/ubuntu/tinkerbell
    - name: Upload tinkerbell app script
      copy: src=files/run-tinkerbell.sh
            dest=/home/ubuntu/run-tinkerbell.sh
            mode=700
    - name: Run Tinkerbell App
      sudo: True
      command: daemon -D /home/ubuntu -n tinkerbell -O tinkerbell.out -- ./run-tinkerbell.sh
    - name: Upload default-image.json
      copy: src=files/default-image.json
            dest=/home/ubuntu/default-image.json
            mode=700
    - name: Add default-image to tinkerbell
      sudo: True
      shell: 'curl -H "Content-Type: application/json" --data @/home/ubuntu/default-image.json http://127.0.0.1:5000/images'
    - name: Upload Pixiecore Boot script
      copy: src=files/run-pixiecore-boot.sh
            dest=/home/ubuntu/run-pixiecore-boot.sh
            mode=700
#    - name: Run Pixiecore Boot
#      sudo: True
#      command: daemon -D /home/ubuntu -n pixiecore -O pixiecore.out -- ./run-pixiecore-boot.sh
    - name: Upload Pixiecore API script
      copy: src=files/run-pixiecore-api.sh
            dest=/home/ubuntu/run-pixiecore-api.sh
            mode=700
    - name: Run Pixiecore API
      sudo: True
      command: daemon -D /home/ubuntu -n pixiecore -O pixiecore.out -- ./run-pixiecore-api.sh
