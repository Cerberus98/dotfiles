#cloud-config
password: atomic
ssh_pwauth: True
chpasswd: { expire: False }
ssh_authorized_keys:
- ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDlKOZGGWjbkrtNKO2yKmaw9ZqJRupTkA64Z62Hx2dq6VX350w2njGLmZ9d7jc4rafryMoJiQQSIPaWDXLfYeWNIRuZ+ePhGNczPsg771kMdu0P7t6RFGrh+77XWvqQT/DKVZE+kdDEP42p6fWwnTiBg0tPZo1RSMxwb1cteF/R3RDVVhGkR+M2acbmVa17ZZO3uSI1iXUX2gfPAuC9gUA/HdFnmGUJMZgjROdWNaSLnBktf+JvPZ1zAnuhFQiTpSxce0t+Iyrz0urMiGvztrPZTCq8eFcNO7Abj6J+MMF4er/3Qy8GNi9cZDT2uzYbAMHDmwjVdxO4DNjiivogFrLb matdietz@MATDIETZ-M-C1NM
write_files:
    - path: /etc/dnsmasq.conf
      owner: root:root
      permissions: 0600
      content: |
        interface = enp0s8
        dhcp-range=enp0s8,192.168.56.200,192.168.100.250,4h
    - path: /etc/systemd/system/local-registry.service
      owner: root:root
      permissions: 0600
      content: |
        [Unit]
        Description=Local Docker Mirror registry cache
        Requires=docker.service
        After=docker.service

        [Service]
        Restart=on-failure
        RestartSec=10
        ExecStart=/usr/bin/docker start -a %p
        ExecStop=-/usr/bin/docker stop -t 2 %p

        [Install]
        WantedBy=multi-user.target
    - path: /etc/etcd/etcd.conf
      owner: root:root
      permissions: 0600
      content: |
        ETCD_NAME=default
        ETCD_DATA_DIR="/var/lib/etcd/default.etcd"
        ETCD_LISTEN_CLIENT_URLS="http://localhost:2379,http://0.0.0.0:4001"
        ETCD_ADVERTISE_CLIENT_URLS="http://localhost:2379,http://0.0.0.0:4001"
    - path: /etc/kubernetes/config
      owner: root:root
      permissions: 0600
      content: |
        KUBE_LOGTOSTDERR="--logtostderr=true"
        KUBE_LOG_LEVEL="--v=0"
        KUBE_ALLOW_PRIV="--allow-privileged=false"
        KUBE_ETCD_SERVERS="--etcd_servers=http://192.168.56.3:4001"
        KUBE_MASTER="--master=http://192.168.56.3:8080"
    - path: /etc/kubernetes/apiserver
      owner: root:root
      permissions: 0600
      content: |
        KUBE_API_ADDRESS="--insecure-bind-address=0.0.0.0"
        KUBE_ETCD_SERVERS="--etcd-servers=http://127.0.0.1:2379"
        KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range=100.254.0.0/16"
        KUBE_ADMISSION_CONTROL="--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"
        KUBE_API_ARGS=""
    - path: /etc/sysconfig/docker
      owner: root:root
      permissions: 0600
      content: |
        OPTIONS='--selinux-enabled --log-driver=journald --registry-mirror=http://192.168.56.3:5000'
        DOCKER_CERT_PATH=/etc/docker
    - path: /etc/sysconfig/flanneld
      owner: root:root
      permissions: 0600
      content: |
        FLANNEL_ETCD="http://192.168.56.3:4001"
        FLANNEL_ETCD_KEY="/atomic01/network"
    - path: /etc/systemd/system/docker.service.d/10-flanneld-network.conf
      owner: root:root
      permissions: 0600
      content: |
        [Unit]
        After=flanneld.service
        Requires=flanneld.service

        [Service]
        EnvironmentFile=/run/flannel/subnet.env
        ExecStartPre=-/usr/sbin/ip link del docker0
        ExecStart=
        ExecStart=/usr/bin/docker daemon \
              --bip=${FLANNEL_SUBNET} \
              --mtu=${FLANNEL_MTU} \
              $OPTIONS \
              $DOCKER_STORAGE_OPTIONS \
              $DOCKER_NETWORK_OPTIONS \
              $INSECURE_REGISTRY
    - path: /etc/kubernetes/kubelet
      owner: root:root
      permissions: 0600
      content: |
        KUBELET_ADDRESS="--address=192.168.56.3"
        KUBELET_HOSTNAME="--hostname-override=192.168.56.3"
        KUBELET_API_SERVER="--api-servers=http://192.168.56.3:8080"
        KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest"
    - path: /tmp/flanneld-conf.json
      owner: root:root
      permissions: 0600
      content: |
        {
          "Network": "172.16.0.0/12",
          "SubnetLen": 24,
          "Backend": {
            "Type": "vxlan"
          }
        }
runcmd:
    - ifdown enp0s8
    - ifup enp0s8
    - systemctl enable etcd kube-apiserver kube-controller-manager kube-scheduler
    - systemctl start etcd kube-apiserver kube-controller-manager kube-scheduler
    - "curl -L http://localhost:2379/v2/keys/atomic01/network/config -XPUT --data-urlencode value@/tmp/flanneld-conf.json"
    - "docker create -p 5000:5000 -v /var/lib/local-registry:/var/lib/registry -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io --name=local-registry registry:2"
    - mkdir /var/lib/local-registry
    - chcon -Rvt svirt_sandbox_file_t /var/lib/local-registry
    - systemctl daemon-reload
    - systemctl enable local-registry
    - systemctl start local-registry --no-block
    - systemctl enable flanneld kubelet kube-proxy
    - systemctl start flanneld --no-block
    - systemctl start kubelet --no-block
    - systemctl start kube-proxy --no-block
    - systemctl start dnsmasq --no-block
