#!/bin/sh

# usage: vpn.sh [connect] [disconnect]

vpngw=$(cat ./eth1.ip.txt)

running ()
{
  ssh vagrant@tunnel "ps aux | grep [v]pnc | awk '{ print $2 }'"
}

original_route ()
{
  netstat -rn | grep ^default | awk '{print $2}' | head -n 1
}



if [ "$1" = "update" ]; then
  origgw=$(original_route)
  echo "Updating VM routes… to ${origgw}"

  ssh vagrant@tunnel "sudo dhclient -v eth1"
  ssh vagrant@tunnel "ifconfig eth1" | awk '/inet /{ split($2, a, ":"); print a[2] }' > eth1.ip.txt
  ssh vagrant@tunnel "sudo ip route del default"
  ssh vagrant@tunnel "sudo ip route add default via ${origgw}"
fi

if [ "$1" = "connect" ]; then
  printf "connecting to vpn via $vpngw \n\n"
  echo $(original_route) > ./orig.route.txt

  if [ -s ./orig.route.txt ]; then
    route delete default
    route add default $vpngw
  else
    echo "was unable to find your default route, exiting"
    exit 0
  fi
fi

if [ "$1" = "disconnect" ]; then
  if [ -s ./orig.route.txt ]; then
    origgw=$(cat ./orig.route.txt)
    printf "restoring default gateway $origgw \n\n"
    route delete default
    route add default $origgw
  else
    echo "orig.route.txt is empty, exiting"
    exit 0
  fi
fi

if [ "$1" = "setup" ]; then
  if [ -n "$(running)" ]; then
    echo "Already running!"
    exit 0
  fi

  echo "Fetching token onto clipboard…"
  ./token.sh

  echo "Connecting to VPN"
  pbpaste | ssh vagrant@tunnel "sudo vpnc" || echo "Failed to connect to vagrant VM"

  if [ -n "$(running)" ]; then
    sudo ./vpn.sh connect
  fi
fi

if [ "$1" = "teardown" ]; then
    if [ -z "$(running)" ]; then
        echo "Already stopped!"
        exit 0
    fi

    ssh vagrant@tunnel "sudo vpnc-disconnect"

    sleep 1

    if [ -z "$(running)" ]; then
        sudo ./vpn.sh disconnect
    fi
fi

