#!/bin/bash

if [ -z $GERRIT_CHANGE_NUMBER ]; then
  echo "WARNING: GERRIT_CHANGE_NUMBER should be set to match that of the images you're using"
  echo "WARNING: Some containers may fail to seed"
fi

set -euo pipefail

source common.sh

# This will do the appropriate pull, tag, push dance
# to effectively mirror the images we need in our
# registry

function rewrite_image() {
    IFS='/' read -r -a array <<< "$1"
    unset IFS

    if [[ "${#array[@]}" == 3 ]]; then
        array=("${array[@]:1}")
    fi

    echo "${REGISTRY_HOST}:${REGISTRY_PORT}/${array[@]}" | tr ' ' '/'
}

for image in "${SEED_IMAGES[@]}"; do
    tag=$(rewrite_image "${image}")

    echo "Pulling seed image ${image}..."
    docker pull "${image}"

    echo "Pushing tagged image ${tag}..."
    docker tag "${image}" "${tag}"
    docker push "${tag}"
done

# Build pixiecore-container image and push to registry
pushd ../pixiecore-container
PIXIECORE_REGISTRY=${REGISTRY_HOST}:${REGISTRY_PORT} make build push
popd

# Build pixiecore-server image and push to registry
pushd ../pixiecore-server
PIXIECORE_SERVER_REGISTRY=${REGISTRY_HOST}:${REGISTRY_PORT} make build push
popd

# Build isotester image and push to registry
pushd ../isotester
ISOTESTER_REGISTRY=${REGISTRY_HOST}:${REGISTRY_PORT} make build-container push-container
popd

# Build bootstrapper image and push to registry
pushd ../bootstrapper
BOOTSTRAPPER_REGISTRY=${REGISTRY_HOST}:${REGISTRY_PORT} make build push
popd

# Build httpd image and push to registry
pushd ../httpd-container
HTTPD_REGISTRY=${REGISTRY_HOST}:${REGISTRY_PORT} make build push
popd

