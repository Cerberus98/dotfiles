Glossary:
=====================================
CMS Store - Stores the ansible roles. "We put that there so that the CIA team knew we weren't trying to take over their bullshit" i.e. I don't care about this
Grant - Our registration System for pulling customer AZ data out of Salesforce
Keymaster - Our entitlement Generation System
Westfalia - Our Message bus and workflow system
Oz - Our Configuration API
Ops CLI - Command line tools for ops to interact with all of the various pieces we have 



Ops CLI
=====================================
We will be providing the metacloud operations team with a CLI toolset they can use to interact with, investigate and debug issues in Celestial services

The expectation is this tool will be able to contact and interact with any of the celestial services we build, and thus should be extensible. Ideally, the driver
handler will be modular, meaning we could install the tool and only provide access to the registration service from one endpoint. 

Tasks:

Ops CLI Boilerplate
CLI Click boilerplate with basic commands and help text
CLI Driver/Plugin discovery

Ops CLI Packaging
Integrate and test with Salesforce Driver/Plugin
Integrate and test with Grant Driver/Plugin
Integrate and test with Keymaster Driver/Plugin
Integrate and test with IPXE Driver/Plugin
Client for interacting directly with the k/v store
Integration for authn and authz from external systems
SPIKE: Connect with operations and find out if they have any particular asks on functionality

Ops CLI Auditing - We need to track every call, with parameters, and the user who made 
  # The auditing will come from the service, but don't forget about this!
Related Tasks from other epics:
Grant Client
Keymaster Client
IPXE Client
Configuration API Client



Things we need:
=====================================

IPXE Image schema 
Customer Registration Schema
Entitlement Schema
Customer Configuration Schema (Probably shared with Customer Registration schema)

IPXE API Implemented
Keymaster API Implemented
Oz API Implemented

Grant Salesforce Consumption Implemented

Resource provisioning for message bus
Workflow worker services
Message Bus Client

Workflow repo Boilerplate
IPXE repo boilerplate
Get ahold of the customer survey endpoint link (Talk to Kahoe)

Ops CLI - Imagine a click CLI client that can do all manner of interactions with entitlements, ipxe and customer info. It's the admin tool
  # I do *not* want this to have any dependencies on any of our other celestial projects

How do we deploy?
  # RPMs

Consolidation on acceptable tools
  Acceptable tools is the entire gamut. Things like python hug, whether or not to use node.js (for some reason)
  Really the answer here is "Take it to the team first"

What do schema migrations look like?


Things we don't have tickets for yet:
=====================================
IPXE Image schema 
Customer Registration Data Spike 
  # Find the person to talk to about who owns this, or provide the documentation that defines it
  # This probably also defines the Customer Configuration Survey Schema
Customer Configuration Schema (Probably shared with Customer Registration schema)
Customer Registration Schema
Entitlement Schema
Workflow worker services
  # This is contingent on Yagmur demo'ing what he has and everyone agreeing
Message Bus Client
  # This is contingent on Yagmur demo'ing what he has and everyone agreeing
Get ahold of the customer survey endpoint link (Talk to Kahoe)
  # Where does our service configuration data live? Part of the image it's deployed with
Ops CLI front facing piece
Client for talking to Entitlement
Client for talking to IPXE
Client for talking to Configuration API

Packaging for IPXE Service
Packaging for IPXE Client
Packaging for Entitlement Service
Packaging for Entitlement Client
Packaging for Configuration API
Packaging for Configuration API Client
Packaging for Workflow Component
Packaging for Workflow Component Client
Integration testing ¯\_(ツ)_/¯

